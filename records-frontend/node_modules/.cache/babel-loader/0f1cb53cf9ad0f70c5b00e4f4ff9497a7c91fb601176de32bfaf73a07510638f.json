{"ast":null,"code":"var _jsxFileName = \"/home/julianne/Development/code/phase-3/SamRobinson-2511-phase-3-sinatra-react-project/records-frontend/src/Components/ReviewForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ReviewForm(_ref) {\n  _s();\n  let {\n    record,\n    setReviews\n  } = _ref;\n  // t.integer \"rating\"\n  // t.string \"comment\"\n  // t.integer \"anime_id\"\n  // t.integer \"user_id\"\n  const [rating, setRating] = useState(\"\");\n  const [comment, setComment] = useState(\"\");\n  function handleReviewForm(e) {\n    e.preventDefault();\n    let newReview = {\n      rating: rating,\n      comment: comment,\n      record_id: record.id,\n      user_id: 1\n    };\n    fetch(\"http://localhost:9292/reviews\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newReview)\n    }).then(res => res.json()).then(data => data);\n    fetch(`http://localhost:9292/reviews/${record.id}/reviews`).then(resp => resp.json()).then(data => setReviews(data));\n    setRating(\"\");\n    setComment(\"\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => handleReviewForm(e),\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add a New Review!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: rating,\n        onChange: e => setRating(e.target.value),\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"Record Rating\",\n        id: \"description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: comment,\n        onChange: e => setComment(e.target.value),\n        type: \"textarea\",\n        name: \"name\",\n        placeholder: \"Comment\",\n        className: \"input-text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        name: \"submit\",\n        value: \"Add Review\",\n        className: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(ReviewForm, \"oWJRsr5h54BIBd1GEU7aRiMouS4=\");\n_c = ReviewForm;\nexport default ReviewForm;\nvar _c;\n$RefreshReg$(_c, \"ReviewForm\");","map":{"version":3,"names":["React","useState","ReviewForm","record","setReviews","rating","setRating","comment","setComment","handleReviewForm","e","preventDefault","newReview","record_id","id","user_id","fetch","method","headers","body","JSON","stringify","then","res","json","data","resp","target","value"],"sources":["/home/julianne/Development/code/phase-3/SamRobinson-2511-phase-3-sinatra-react-project/records-frontend/src/Components/ReviewForm.js"],"sourcesContent":["import React, {useState} from \"react\"\n\nfunction ReviewForm({record, setReviews}){\n    // t.integer \"rating\"\n    // t.string \"comment\"\n    // t.integer \"anime_id\"\n    // t.integer \"user_id\"\n    const [rating, setRating] = useState(\"\")\n    const [comment, setComment] = useState(\"\")\n\n\n  function handleReviewForm(e){\n    e.preventDefault()\n    let newReview = {\n      rating : rating,\n      comment: comment,\n      record_id: record.id,\n      user_id: 1,\n    }\n\n    fetch(\"http://localhost:9292/reviews\", {\n      method : \"POST\",\n      headers : {\n        \"Content-Type\" : \"application/json\"\n      },\n      body : JSON.stringify(newReview)\n    })\n    .then(res => res.json())\n    .then(data => data)\n    fetch(`http://localhost:9292/reviews/${record.id}/reviews`)\n      .then(resp => resp.json())\n      .then(data => setReviews(data))\n\n    setRating(\"\")\n    setComment(\"\")\n\n}\n\n  return (\n    <div className=\"form\">\n      <form onSubmit={(e) => handleReviewForm(e)}>\n        <h3>Add a New Review!</h3>\n        \n        <input\n          value={rating}\n          onChange={(e) => setRating(e.target.value)}\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Record Rating\"\n          id=\"description\"\n        />\n               \n        <input\n          value={comment}\n          onChange={(e) => setComment(e.target.value)}\n          type=\"textarea\"\n          name=\"name\"\n          placeholder=\"Comment\"\n          className=\"input-text\"\n        />\n        <br />\n        \n        <input\n          type=\"submit\"\n          name=\"submit\"\n          value=\"Add Review\"\n          className=\"submit\"\n        />\n      </form>\n      </div>\n)}\n  \nexport default ReviewForm"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAA;AAErC,SAASC,UAAU,OAAsB;EAAA;EAAA,IAArB;IAACC,MAAM;IAAEC;EAAU,CAAC;EACpC;EACA;EACA;EACA;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAG5C,SAASQ,gBAAgB,CAACC,CAAC,EAAC;IAC1BA,CAAC,CAACC,cAAc,EAAE;IAClB,IAAIC,SAAS,GAAG;MACdP,MAAM,EAAGA,MAAM;MACfE,OAAO,EAAEA,OAAO;MAChBM,SAAS,EAAEV,MAAM,CAACW,EAAE;MACpBC,OAAO,EAAE;IACX,CAAC;IAEDC,KAAK,CAAC,+BAA+B,EAAE;MACrCC,MAAM,EAAG,MAAM;MACfC,OAAO,EAAG;QACR,cAAc,EAAG;MACnB,CAAC;MACDC,IAAI,EAAGC,IAAI,CAACC,SAAS,CAACT,SAAS;IACjC,CAAC,CAAC,CACDU,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAIA,IAAI,CAAC;IACnBT,KAAK,CAAE,iCAAgCb,MAAM,CAACW,EAAG,UAAS,CAAC,CACxDQ,IAAI,CAACI,IAAI,IAAIA,IAAI,CAACF,IAAI,EAAE,CAAC,CACzBF,IAAI,CAACG,IAAI,IAAIrB,UAAU,CAACqB,IAAI,CAAC,CAAC;IAEjCnB,SAAS,CAAC,EAAE,CAAC;IACbE,UAAU,CAAC,EAAE,CAAC;EAElB;EAEE,oBACE;IAAK,SAAS,EAAC,MAAM;IAAA,uBACnB;MAAM,QAAQ,EAAGE,CAAC,IAAKD,gBAAgB,CAACC,CAAC,CAAE;MAAA,wBACzC;QAAA,UAAI;MAAiB;QAAA;QAAA;QAAA;MAAA,QAAK,eAE1B;QACE,KAAK,EAAEL,MAAO;QACd,QAAQ,EAAGK,CAAC,IAAKJ,SAAS,CAACI,CAAC,CAACiB,MAAM,CAACC,KAAK,CAAE;QAC3C,IAAI,EAAC,MAAM;QACX,IAAI,EAAC,MAAM;QACX,WAAW,EAAC,eAAe;QAC3B,EAAE,EAAC;MAAa;QAAA;QAAA;QAAA;MAAA,QAChB,eAEF;QACE,KAAK,EAAErB,OAAQ;QACf,QAAQ,EAAGG,CAAC,IAAKF,UAAU,CAACE,CAAC,CAACiB,MAAM,CAACC,KAAK,CAAE;QAC5C,IAAI,EAAC,UAAU;QACf,IAAI,EAAC,MAAM;QACX,WAAW,EAAC,SAAS;QACrB,SAAS,EAAC;MAAY;QAAA;QAAA;QAAA;MAAA,QACtB,eACF;QAAA;QAAA;QAAA;MAAA,QAAM,eAEN;QACE,IAAI,EAAC,QAAQ;QACb,IAAI,EAAC,QAAQ;QACb,KAAK,EAAC,YAAY;QAClB,SAAS,EAAC;MAAQ;QAAA;QAAA;QAAA;MAAA,QAClB;IAAA;MAAA;MAAA;MAAA;IAAA;EACG;IAAA;IAAA;IAAA;EAAA,QACD;AACX;AAAC,GApEO1B,UAAU;AAAA,KAAVA,UAAU;AAsEnB,eAAeA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}